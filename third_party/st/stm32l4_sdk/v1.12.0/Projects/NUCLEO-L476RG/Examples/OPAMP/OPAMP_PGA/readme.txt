/**
  @page OPAMP_PGA Amplify an applied signal example  
  @verbatim
  ********************* COPYRIGHT(c) 2017 STMicroelectronics *******************
  * @file    OPAMP/OPAMP_PGA/readme.txt 
  * @author  MCD Application Team
  * @brief   Description of the OPAMP PGA: programmable gain example.
  ******************************************************************************
  *
  * Redistribution and use in source and binary forms, with or without modification,
  * are permitted provided that the following conditions are met:
  *   1. Redistributions of source code must retain the above copyright notice,
  *      this list of conditions and the following disclaimer.
  *   2. Redistributions in binary form must reproduce the above copyright notice,
  *      this list of conditions and the following disclaimer in the documentation
  *      and/or other materials provided with the distribution.
  *   3. Neither the name of STMicroelectronics nor the names of its contributors
  *      may be used to endorse or promote products derived from this software
  *      without specific prior written permission.
  *
  * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
  * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
  * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
  * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE
  * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
  * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
  * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
  * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
  * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
  * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
  *
  ******************************************************************************
  @endverbatim

@par Example Description 

This example shows how to use the built-in PGA mode (OPAMP programmable gain).

- Test description:
      - The example uses the the built-in PGA mode (OPAMP programmable gain).
      - The DMA provides samples (sinewave) to the DAC. 
      - The DAC peripheral generates a sine wave signal on DAC_OUT2 (PA5) which is
        amplified by the OPAMP1. 
      - The OPAMP2 amplifies output is on PA3 with gain of either 2 or 4.
        The OPAMP gain is changed on the fly while OPAMP remains enabled.
      - The OPAMP is used in both normal and low power mode (sample and hold mode). 
      - The low power mode of OPAMP (and DAC)can also be used while Cortex stays 
        in sleep mode.
      - The Cortex can be set into sleep mode with no DMA interrupt handling. 
      - The tests steps are:
      - Step 0:
      	DAC:     normal power mode
      	OPAMP:   normal power mode - gain = 2
      	DMA:     circular mode - DMA half transfer IT handled by Cortex
      	Cortex:  run mode
      - Step 1:
      	DAC:     normal power mode
      	OPAMP:   normal power mode - gain = 4
      	DMA:     circular mode - DMA half transfer IT handled by Cortex
      	Cortex:  run mode
      - Step 2:
      	DAC:     Low power mode
      	OPAMP:   normal power mode - gain = 4
      	DMA:     circular mode - DMA half transfer - no IT handled by Cortex
      	Cortex:  run mode
      - Step 3:
      	DAC:     Low power mode
      	OPAMP:   Low power mode - gain = 4
      	DMA:     circular mode - DMA half transfer - no IT handled by Cortex
      	Cortex:  sleep mode
      - Step 4:
      	DAC:     Low power mode
      	OPAMP:   Low power mode - gain = 2
      	DMA:     circular mode - DMA half transfer - no IT handled by Cortex
      	Cortex:  sleep mode
      
    
@par Directory contents 

  - OPAMP/OPAMP_PGA/Inc/stm32l4xx_hal_conf.h    HAL configuration file
  - OPAMP/OPAMP_PGA/Inc/stm32l4xx_it.h          Interrupt handlers header file
  - OPAMP/OPAMP_PGA/Inc/main.h                  Header for main.c module  
  - OPAMP/OPAMP_PGA/Src/stm32l4xx_it.c          Interrupt handlers
  - OPAMP/OPAMP_PGA/Src/main.c                  Main program
  - OPAMP/OPAMP_PGA/Src/stm32l4xx_hal_msp.c     HAL MSP file
  - OPAMP/OPAMP_PGA/Src/system_stm32l4xx.c      STM32L4xx system source file

@par Hardware and Software environment  
  
  - This example runs on STM32L476xx devices.
    
  - This example has been tested with NUCLEO-L476RG Rev C board and can be
    easily tailored to any other supported device and development board.

  - NUCLEO-L476RG Rev C Set-up :
    
      - Connect an oscilloscope to (DAC_OUT2, PA5: pin11 - connector CN10) pin 
        to display the sine wave signal generated by the DAC 
        (800 mV amplitude peak to peak). (DAC ouptut = OPAMP input).
      - Connect an oscilloscope to (OPAMP_OUT2, PB0: pin34 - connector CN7) pin to display waveform 
        (OPAMP output)
      - Press wup/tamper button to switch between steps.
      - You may redo the tests, either via
        -> changing sample and hold parameters of the DAC.
        or through 
        -> commenting #define CHANGE_GAIN_IN_SLEEP_IN_MAIN 1 in main.h
           if you with gain to be modified via IT (i.e. not in main).

@par How to use it ? 

In order to make the program work, you must do the following :
 - Open your preferred toolchain 
 - Rebuild all files and load your image into target memory
 - Run the example
  
 * <h3><center>&copy; COPYRIGHT STMicroelectronics</center></h3>
 */

